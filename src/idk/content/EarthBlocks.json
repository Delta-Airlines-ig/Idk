package betamindy.content;

import arc.graphics.*;
import arc.graphics.g2d.*;
import arc.struct.*;
import arc.util.*;
import betamindy.entities.bullet.*;
import betamindy.graphics.*;
import betamindy.type.*;
import betamindy.type.shop.*;
import betamindy.world.blocks.campaign.*;
import betamindy.world.blocks.defense.*;
import betamindy.world.blocks.defense.turrets.*;
import betamindy.world.blocks.defense.turrets.pattern.*;
import betamindy.world.blocks.distribution.*;
import betamindy.world.blocks.environment.*;
import betamindy.world.blocks.logic.*;
import betamindy.world.blocks.payloads.*;
import betamindy.world.blocks.power.*;
import betamindy.world.blocks.production.PayloadDeconstructor;
import betamindy.world.blocks.production.*;
import betamindy.world.blocks.production.payduction.*;
import betamindy.world.blocks.storage.*;
import betamindy.world.blocks.units.*;
import betamindy.world.draw.*;
import mindustry.*;
import mindustry.content.*;
import mindustry.entities.effect.*;
import mindustry.entities.pattern.*;
import mindustry.game.*;
import mindustry.gen.*;
import mindustry.graphics.*;
import mindustry.type.*;
import mindustry.world.*;
import mindustry.world.blocks.defense.*;
import mindustry.world.blocks.defense.turrets.*;
import mindustry.world.blocks.environment.*;
import mindustry.world.blocks.logic.*;
import mindustry.world.blocks.payloads.*;
import mindustry.world.blocks.production.*;
import mindustry.world.blocks.storage.*;
import mindustry.world.draw.*;
import mindustry.world.meta.*;

import static betamindy.BetaMindy.*;
import static betamindy.content.ShopItems.*;
import static betamindy.util.BlockLib.*;
import static mindustry.type.ItemStack.*;

@SuppressWarnings("deprecation")
public class MindyBlocks{
    //environment
    public static Block Redsand, ExposedStone, ExposedStoneWall, RedishStoneWall, RedStonewall, RedStone, RedishStone,
    //ores
    oreIron, oreAluminum, oreLithium, oreTin,
    //walls
    leadWall, leadWallLarge, stoneWall, stoneWallLarge, ironWall, ironWallLarge,
    //drills
    drillMini, drillMega, mynamite, mynamiteLarge,
    //units
    boostPad, rejuvenator, bumper, bumperPlus, bumperBlue, fan, fanMega, clearPipe, clearDuct, claw, phaseClaw, driftPad, teleportPad, portalPad, yutnori,
    //logic
    linkPin, heatSink, heatFan, heatSinkLarge, messageVoid, messageSource, nullifier, pen, starPen, colorModule, strokeModule, noteBlock, starNoteBlock, sfxBlock, filterDome,
    //turrets
    hopeBringer, anchor, bermuda, propaganda, spear, justice, sting, ray, tarnation, magicTurret, credit, taxation, brokerage, mortgage, phisher, trojan, spyware, backdoor, masterkey,
    //power
    pressurePad, pressurePadLarge, button, buttonLarge, spotlight, buttonRouter, buttonDistributor, isotopeReactor,
    //crafting
    blockFurnace, heavyFurnace, gateSwitch, coffeeMachine,

    public static void load() {
        Redsand = new Floor("redsand"){{
            itemDrop = Items.sand; 
            playerUnmineable = true;
            variants = 0;
            albedo = 0.5f;
        }};
        ExposedStone = new Floor("exposed-stone"){{
            itemDrop = EarthItems.Stone; 
            playerUnmineable = true;
            variants = 0;
            albedo = 0.5f;
        }};

        ExposedStoneWall = new StaticWall("exposed-stone-wall"){{
            variants = 2;
        }};
        RedishStoneWall = new StaticWall("redishstone-wall"){{
            variants = 0;
        }};
        RedStonewall = new StaticWall("redstone-wall"){{
            variants = 0;
        }};

        RedStone = new Floor("redstone"){{
            speedMultiplier = 1f;
            variants = 0;
            albedo = 0.5f;
        }};
        RedishStone = new Floor("redishstone"){{
            speedMultiplier = 1f;
            variants = 0;
            albedo = 0.5f;
        }};
        //endregion

        //ores
        oreIron = new OreBlock(EarthItems.Iron){{
            oreDefault = false;
            oreThreshold = 0.841f;
            oreScale = 25.580953f;
        }};
        oreAluminum = new OreBlock(EarthItems.Aluminum){{
            oreDefault = false;
            oreThreshold = 0.849f;
            oreScale = 15.580953f;
        }};
        oreLithium = new OreBlock(EarthItems.Lithium){{
            oreDefault = false;
            oreThreshold = 0.869f;
            oreScale = 10.580953f;
        }};
        oreTin = new OreBlock(EarthItems.Tin){{
            oreDefault = false;
            oreThreshold = 0.879f;
            oreScale = 9.580953f;
        }};
        //turrets
        spectrum = new ItemTurret("spectrum"){{
            requirements(Category.turret, with(Items.copper, 30, MindyItems.scalarRaw, 35, Items.silicon, 8));

            range = 130f; //must be set before ammo()
            ammo(
                    Items.copper, new ItemTrailBulletType(6, 4.5f, range, FireColor.fromMap.get(Items.copper)),
                    MindyItems.scalarRaw, new ItemTrailBulletType(9, 4f, range, Pal2.deepRed),
                    Items.titanium, new ItemTrailBulletType(20, 7f, range, Color.cyan){{
                        pierceCap = 4;
                        reloadMultiplier = 1.2f;
                    }},
                    MindyItems.scalar, new ItemTrailBulletType(29, 4f, range, Pal2.scalar){{
                        trailWidth = 1.4f;
                        pierceCap = 9;
                    }},
                    MindyItems.starStone, new ItemTrailBulletType(42, 17f, range, Pal.surge){{
                        trailWidth = 1f;
                        pierceCap = 18;
                        reloadMultiplier = 2f;
                    }}
            );
            health = 500;
            size = 1;
            reload = 15f;
            inaccuracy = 1.5f;
            shootCone = 30f;
            //shootSound = MindySounds.pewRetro; //this breaks the audio bus for some reason
        }};

//crafting
        steelSmelter = new GenericCrafter("steel-smelter"){{
            requirements(Category.crafting, with(EarthItems.iron, 65, Items.copper, 40, Items.lead, 60));
            outputLiquid = new LiquidStack(MindyLiquids.colloid, 0.2f);
            craftTime = 120f;
            size = 2;
            hasPower = true;
            hasItems = true;
            hasLiquids = true;
            rotate = false;
            solid = true;
            outputsLiquid = true;
            drawer = new DrawMulti(new DrawRegion("-bottom"), new DrawLiquidTile(MindyLiquids.colloid), new DrawDefault(), new DrawRegion("-top"));
            liquidCapacity = 24f;

            consumePower(1.5f);
            consumeItem(Items.titanium);
            consumeLiquid(MindyLiquids.siloxol, 0.2f);
        }};

        leadWall = new Wall("lead-wall"){{
            health = 360;
            requirements(Category.defense, with(Items.lead, 6));
        }};

        leadWallLarge = new Wall("lead-wall-large"){{
            health = 1440;
            size = 2;
            requirements(Category.defense, with(Items.lead, 24));
        }};

        stoneWall = new Wall("stone-wall"){{
            health = 380;
            requirements(Category.defense, with(Items.graphite, 3, Items.metaglass, 5));
        }};

        stoneWallLarge = new Wall("stone-wall-large"){{
            health = 1520;
            size = 2;
            requirements(Category.defense, with(Items.graphite, 12, Items.metaglass, 20));
        }};

        ironWall = new Wall("iron-wall"){{
            health = 440;
            requirements(Category.defense, with(Items.copper, 2, Items.silicon, 5));
        }};
        ironWallLarge = new Wall("iron-wall-large"){{
            health = 1760;
            size = 2;
            requirements(Category.defense, with(Items.copper, 8, Items.silicon, 20));
        }};
//drills
        drillmechanical = new Drill("drill-mechanical"){{
            itemCapacity = 25;
            hasPower = false;
          tier = 1
            requirements(Category.production, with(Items.copper, 30, EarthItems.Iron, 20, EarthItems.stone, 10));
        }};

        drillpneumatic = new Drill("drill-pneumatic"){{
            size = 2;
            itemCapacity = 50;
            mineSpeed = 3.5f;
            tier = 2
            requirements(Category.production, with(Items.copper, 135, Items.titanium, 90, Items.silicon, 90, Items.plastanium, 45, MindyItems.vector, 15));
        }};
           drillelectric = new Drill("drill-electric"){{
            size = 3;
            itemCapacity = 50;
            mineSpeed = 4.5f;
            hasPower = true;
            tier = 3
            consumePower(5.6f);
            requirements(Category.production, with(Items.copper, 135, Items.titanium, 90, Items.silicon, 90, Items.plastanium, 45, MindyItems.vector, 15));
        }};

        rejuvenator = new RepairTurret("repair-turret"){{
            requirements(Category.units, with(Items.thorium, 365, Items.silicon, 250, Items.plastanium, 55, Items.phaseFabric, 75, MindyItems.scalar, 175));
            size = 3;
            powerUse = 16f;
            repairRadius = 170f;
            consumeItem(MindyItems.scalar).boost();
        }};

        boostPad = new BoostPad("boostpad"){{
            size = 2;
            requirements(Category.units, with(Items.lead, 24, Items.silicon, 10, Items.phaseFabric, 30));
            lightColor = Color.orange;
            lightRadius = 50f;
        }};

        driftPad = new DirectionalPad("driftpad"){{
            size = 2;
            requirements(Category.units, with(Items.copper, 24, Items.metaglass, 10, MindyItems.scalarRaw, 20));
            lightColor = Pal.lancerLaser;
            lightRadius = 50f;
            sprites = 5;

            friend = (BoostPad) boostPad;
            status = MindyStatusEffects.drift;
            duration = cooldown = 14f;
            boostEffect = MindyFx.driftBlock;
            boostSound = Sounds.flame2;
            impulseAmount = 9f;
        }};

        teleportPad = new TeleportPad("teleport-pad"){{
            requirements(Category.units, with( Items.copper, 320, Items.silicon, 150, Items.phaseFabric, 50, MindyItems.tensor, 30));
            size = 3;
            consumePower(10f);
        }};

        portalPad = new TeleportPortal("teleport-portal"){{
            requirements(Category.units, with( Items.scrap, 320, Items.copper, 250, Items.phaseFabric, 75, MindyItems.tensor, 30, MindyItems.bittrium, 55));
            size = 3;
            animateNear = false;
            heatLerp = 0.02f;
            lightColor = Color.white;
            inSound = MindySounds.easterEgg1;
            outSound = MindySounds.easterEgg2;
            teleportIn = MindyFx.unitInPortal;
            teleportOut = MindyFx.portalWaveSmall;
            teleportUnit = MindyFx.unitOutPortal;
            hasShadow = false;
        }};

        //frostPad = new FrostPad("frostpad"){

        //}

        linkPin = new LinkPinner("linkpin"){{
            requirements(Category.logic, with( Items.graphite, 30, Items.silicon, 15, Items.metaglass, 30));
        }};

        heatSink = new ProcessorCooler("heatsink"){{
            size = 2;
            requirements(Category.logic, with( Items.titanium, 70, Items.silicon, 25, Items.plastanium, 65));
        }};

        heatFan = new ProcessorFan("coolerfan"){{
            size = 3;
            boost = 3;
            maxProcessors = 5;
            consumePower(4f);
            requirements(Category.logic, with( Items.titanium, 90, Items.silicon, 50, Items.plastanium, 50, Items.phaseFabric, 25));
        }};

        heatSinkLarge = new ProcessorCooler("waterblock"){{
            size = 3;
            boost = 2;
            maxProcessors = 6;
            liquidCapacity = 640;
            acceptCoolant = true;
            //consumeLiquid(Liquids.water, 3f);
            requirements(Category.logic, with( Items.titanium, 110, Items.silicon, 50, Items.metaglass, 40, Items.plastanium, 30, Items.surgeAlloy, 15));
        }};

        nullifier = new Disabler("nullifier"){{
            consumePower(0.5f);
            requirements(Category.logic, with(Items.copper, 40, Items.lead, 20, Items.silicon, 10));
        }};

        noteBlock = new NotePlayer("note-block"){{
            consumePower(0.5f);
            requirements(Category.logic, with(Items.silicon, 5, Items.graphite, 10));
        }};

        starNoteBlock = new NotePlayer("star-note-block"){{
            global = true;
            consumePower(0.8f);
            requirements(Category.logic, with(Items.silicon, 5, Items.graphite, 10, MindyItems.starStone, 1));
        }};

        sfxBlock = new NotePlayer("sfx-block"){{
            consumePower(0.5f);
            requirements(Category.logic, with(Items.copper, 10, Items.silicon, 5, Items.plastanium, 10));
            soundEffect = Fx.mine;

            instruments = new Instrument[]{
                    new Instrument("Place", Sounds.place),
                    new Instrument("Break", Sounds.breaks),
                    new Instrument("Click", Sounds.click),
                    new Instrument("Boom", Sounds.boom),
                    new Instrument("Shoot", Sounds.shoot),
                    new Instrument("Sap", Sounds.sap),
                    new Instrument("[[[[Big Shot]]", Sounds.bigshot),
                    new Instrument("Laser", Sounds.laser),
                    new Instrument("LaserB", Sounds.laserblast),
                    new Instrument("Unlock", Sounds.unlock),
                    new Instrument("Wave", Sounds.wave),
                    new Instrument("Flame", Sounds.flame),
                    new Instrument("PDrop", Sounds.plasmadrop),
                    new Instrument("PBoom", Sounds.plasmaboom),
                    new Instrument("CBells", MindySounds.presentBells),
                    new Instrument("Push", MindySounds.pistonPush),
                    new Instrument("Shatter", MindySounds.shatter),
                    new Instrument("Wind3", Sounds.wind3)
            };
        }};

        filterDome = new FilterDome("filter-dome"){{
            requirements(Category.logic, with(Items.copper, 10, Items.silicon, 5, Items.plastanium, 10));
            size = 2;
            consumePower(0.5f);
        }};

        pen = new Pen("pen"){{
            requirements(Category.logic, with(Items.copper, 15, Items.silicon, 5, Items.metaglass, 5));
            drawLength = 125;
        }};

        colorModule = new PenColorModule("color-module"){{
            requirements(Category.logic, with(Items.copper, 15, Items.coal, 15, Items.graphite, 15));
        }};

        strokeModule = new PenStrokeModule("stroke-module"){{
            requirements(Category.logic, with(Items.copper, 15, Items.metaglass, 15, Items.phaseFabric, 15));
        }};

        starPen = new Pen("star-pen"){{
            requirements(Category.logic, with(Items.copper, 15, Items.silicon, 5, MindyItems.starStone, 5));
            drawLength = 250;
            glow = true;
        }};

        button = new ButtonTap("button"){{
            requirements(Category.power, with(Items.graphite, 5, Items.silicon, 25));
            health = 40;
            powerProduction = 1f;
        }};

        buttonLarge = new ButtonTap("button-large"){{
            requirements(Category.power, with(Items.graphite, 25, Items.silicon, 100));
            health = 160;
            size = 2;
            powerProduction = 2f;
        }};

        pressurePad = new ButtonPad("buttonpad"){{
            requirements(Category.power, with(Items.titanium, 10, Items.silicon, 15));
            health = 100;

            basicPowerProduction = 0.5f;
        }};

        pressurePadLarge = new ButtonPad("buttonpad-large"){{
            requirements(Category.power, with(Items.titanium, 50, Items.silicon, 50));
            size = 2;
            health = 400;

            basicPowerProduction = 1f;
            detectAir = true;
        }};

        buttonRouter = new ButtonRouter("buttonrouter"){{
            powerProduction = 0.3f;
            requirements(Category.power, with(Items.lead, 10, Items.silicon, 15));
        }};

        buttonDistributor = new ButtonRouter("buttonrouter-large"){{
            size = 2;
            powerProduction = 0.6f;
            duration = 3f;
            requirements(Category.power, with(Items.lead, 40, Items.silicon, 50));
        }};

        mynamite = new Mynamite("mynamite"){{
            health = 60;
            mineRadius = 2;
            tier = 2;

            consumePower(0.1f);
            requirements(Category.production, with(Items.lead, 10, Items.silicon, 20, Items.blastCompound, 25));
        }};

        mynamiteLarge = new Mynamite("mynamite-large"){{
            health = 60;
            size = 2;
            mineRadius = 5;
            tier = 6;
            minTier = 2;
            baseAmount = 3;
            canClick = false;

            smokeChance = 0.15f;
            fireEffect = Fx.burning;

            consumePower(0.4f);
            requirements(Category.production, with(Items.thorium, 45, Items.blastCompound, 100));
        }};

        bumper = new Bumper("bumper"){{
            health = 300;
            requirements(Category.units, with(Items.lead, 30, Items.graphite, 15, Items.metaglass, 15));
            size = 2;
            chanceDeflect = 10f;
        }};

        bumperBlue = new BumperBlue("bumper-blue"){{
            health = 300;
            requirements(Category.units, with(Items.copper, 30, Items.graphite, 10, Items.metaglass, 10));
            size = 2;
            chanceDeflect = 10f;
        }};

        bumperPlus = new Bumper("bumper-plus"){{
            health = 600;
            requirements(Category.units, with(Items.lead, 30, Items.plastanium, 15, Items.phaseFabric, 15));
            size = 2;
            bumpSpeedLimit = 8f;
            bumpScl = 0.8f;
            chanceDeflect = 50f;
        }};

        fan = new UnitFan("fan"){{
            size = 2;
            health = 200;
            consumePower(1.5f);
            requirements(Category.units, with(Items.titanium, 50, Items.silicon, 25, Items.metaglass, 30));
        }};

        fanMega = new UnitFan("fan-mega"){{
            size = 3;
            health = 450;
            range = 150f;
            strength = 42f;
            windParticles = 12;
            windAlpha = 0.9f;
            smokeX = 22f;
            smokeY = 6f;
            consumePower(3f);
            hasLiquids = true;
            liquidCapacity = 40f;
            requirements(Category.units, with(Items.titanium, 150, Items.silicon, 50, Items.metaglass, 60, Items.plastanium, 20));
        }};

        spikeScrap = new Spike("spike"){{
            health = 100;
            requirements(Category.defense, with(Items.scrap, 6));
        }};

        spikeSurge = new Spike("spike-surge"){{
            health = 400;
            damage = 75f;
            lightningChance = 0.05f;
            requirements(Category.defense, with(Items.titanium, 3, Items.surgeAlloy, 3));
        }};

        spikePyra = new Spike("spike-pyra"){{
            health = 200;
            damageSelf = 12f;
            status = StatusEffects.burning;
            requirements(Category.defense, with(Items.lead, 6, Items.pyratite, 3));
        }};

        spikeCryo = new Spike("spike-cryo"){{
            health = 500;
            damage = 100f;
            damageSelf = 20f;
            breakSound = MindySounds.freeze;
            status = MindyStatusEffects.icy;
            requirements(Category.defense, with(MindyItems.cryonite, 4, MindyItems.scalar, 1));
        }};

        spikeClear = new Spike("spike-clear"){{
            health = 400;
            damage = 75f;
            celeste = true;
            requirements(Category.defense, with(Items.metaglass, 4, MindyItems.vector, 1));
        }};

        crusher = new Crusher("crusher"){{
            requirements(Category.defense, with(Items.copper, 12, Items.titanium, 18, Items.silicon, 8));
            health = 350;
            consumePower(1.9f);
        }};

        crusherPyra = new Crusher("crusher-pyra"){{
            requirements(Category.defense, with(Items.pyratite, 22, Items.thorium, 18, Items.plastanium, 18));
            health = 750;
            damage = 1.8f;
            status = StatusEffects.melting;
            rotateSpeed = 8f;
            damageEffect = MindyFx.razorFast;
            effectChance = 0.7f;
            consumePower(3.8f);
        }};

        spotlight = new FloodLight("spotlight"){{
            requirements(Category.effect, BuildVisibility.lightingOnly, with(Items.graphite, 10, Items.silicon, 4));

            size = 1;
            consumePower(0.08f);
        }};

        messageSource = new MessageSource("message-source"){{
            requirements(Category.logic, with(MindyItems.bittrium, 1));
        }};

        messageVoid = new MessageBlock("message-void"){{
            requirements(Category.logic, with(MindyItems.source, 1));

            maxNewlines = 1;
            maxTextLength = 0;
        }};

        fireCan = new Campfire("fire-can"){{
            health = 100;
            itemCapacity = 15;
            buildCostMultiplier = 3f;
            isTorch = true;
            requirements(Category.effect, with(Items.copper, 12, Items.sand, 10));
        }};

        campfire = new Campfire("campfire"){{
            size = 2;
            health = 400;
            itemCapacity = 30;
            buildCostMultiplier = 3f;

            fireEffect = MindyFx.bigFire;
            fireDustEffect = MindyFx.bigFireDust;
            smokeChance = 0.15f;
            statusDuration = 2400f;
            statusReload = 360f;
            requirements(Category.effect, with(Items.copper, 48, Items.titanium, 20, Items.sand, 10));
        }};

        discharger = new Discharger("discharger"){{
            health = 80;
            buildCostMultiplier = 3f;
            consumePowerBuffered(4000f);
            requirements(Category.effect, with(Items.lead, 10, Items.graphite, 10, Items.silicon, 10));
        }};

        claw = new Claw("claw"){{
            requirements(Category.units, with(Items.copper, 15, Items.titanium, 15, Items.plastanium, 6));
        }};

        phaseClaw = new Claw("phase-claw"){{
            range = 84f;
            pullStrength = 3.6f;
            maxSize = 40f;
            maxBlockSize = 2;

            hasPower = true;
            consumePower(1f);
            requirements(Category.units, with(Items.titanium, 15, Items.thorium, 15, Items.silicon, 12, Items.phaseFabric, 5));
        }};

        clearPipe = new ClearPipe("clear-pipe"){{
            size = 2;
            hasShadow = false; //use custom shadows
            requirements(Category.units, with(Items.metaglass, 20, Items.plastanium, 8));
        }};

        clearDuct = new ClearPipe("unit-duct"){{
            size = 2;
            hasShadow = true;
            conditional = true;
            speed = 1f / 3.5f;
            ejectStrength = 8f;
            popSound = Sounds.release;
            suckSound = Sounds.respawn;
            hasPower = true;
            consumePowerCond(6f, ClearPipeBuild::isGate);
            requirements(Category.units, with(Items.metaglass, 20, Items.graphite, 8, MindyItems.vector, 2));
        }};

        omegaRune = new RuneBlock("omega-rune"){
            @Override
            public boolean isHidden(){
                return super.isHidden() || !(Vars.headless || Vars.net.client());
            }

            {
                requirements(Category.effect, with(MindyItems.scalar, 1, MindyItems.vector, 1, MindyItems.tensor, 1, MindyItems.source, 1));
            }
        };

        crystalPyra = new Crystal("pyra-crystal", Items.pyratite){{
            sprites = 5;
            status = StatusEffects.burning;
            updateEffect = Fx.burning;
        }};

        crystalCryo = new Crystal("cryo-crystal", MindyItems.cryonite){{
            sprites = 5;
            status = MindyStatusEffects.icy;
            updateEffect = MindyFx.snowflake;
        }};

        crystalScalar = new ScidustryCrystal("scalar-crystal", MindyItems.scalarRaw){{
            sprites = 4;
            status = MindyStatusEffects.starDrunk;
        }};

        crystalVector = new ScidustryCrystal("vector-crystal", MindyItems.vectorRaw){{
            alt = true;
            sprites = 6;
            status = MindyStatusEffects.pause;
        }};

        crystalTensor = new EldoofusCrystal("tensor-crystal", MindyItems.tensorRaw){{
            sprites = 6;
            updateEffect = MindyFx.sparkleZeta;
            status = MindyStatusEffects.amnesia;
        }};

        crystalSpace = new ShaderCrystal("space-crystal", MindyItems.spaceMatter){{
            sprites = 6;
            updateEffect = MindyFx.sparkleSpace;
            breakEffect = destroyEffect = MindyFx.crystalBreakSpace;
            shader = MindyShaders.space;

            color1 = Color.magenta;
            color2 = Color.yellow;
            glowOpacity = 0.75f;
            auraOpacity = 0.2f;
        }};

        crystalBittrium = new ShaderCrystal("bittrium-crystal", MindyItems.bittrium){{
            sprites = 2;
            updateEffect = MindyFx.sparkleBittrium;
            breakEffect = destroyEffect = MindyFx.crystalBreakBittrium;
            status = MindyStatusEffects.bittriumBane;
            shader = MindyShaders.bittrium;
            glowOpacity = 0.9f;
        }};

        // endgame turrets : ONLY the 5 Disaster Turrets specified in the trello!
        tarnation = new PowerTurret("tarnation"){{
            requirements(Category.turret, with(Items.lead, 6000, Items.thorium, 5500, Items.silicon, 3950, Items.plastanium, 1800, Items.surgeAlloy, 1024, MindyItems.bittrium, 128));
            range = 540f;

            shoot.firstShotDelay = 130f;
            recoil = 9f;
            reload = 290f;
            shake = 6f;
            shootEffect = MindyFx.tarnationShoot;
            smokeEffect = Fx.none;
            heatColor = Color.red;
            size = 6;
            health = 280 * size * size;
            targetAir = true;
            shootSound = Sounds.plasmadrop;
            rotateSpeed = 2f;
            unitSort = (u, x, y) -> -u.maxHealth;

            consumePower(60f);

            shootType = new ThickLightningBulletType(3048, Pal.lancerLaser){{
                buildingDamageMultiplier = 0.3f;

                //TODO: this only emits one tarnationLine effect, this should definitely be changed but I am cautious of changing effects without testing. -Anuke
                chargeEffect = new MultiEffect(MindyFx.tarnationCharge, MindyFx.tarnationLines);
            }};
        }};

        hopeBringer = new MultiTurret("hopebringer"){{
            requirements(Category.turret, with(MindyItems.bittrium, 9999));//TODO
            size = 9;
            health = 9999;
            powerUse = 90f;
            range = 600f;

            patterns = new TurretPattern[]{Patterns.starBlazing, Patterns.starBlazing, Patterns.chaosBuster, Patterns.starBlazing};
        }};

        box = new Box("box"){{
            requirements(Category.effect, BuildVisibility.shown, with(Items.graphite, 5));
            instantDeconstruct = true;
            placeablePlayer = false;
        }};

        present = new PresentBox("present"){{
            requirements(Category.effect, with(Items.copper, 15, Items.graphite, 15));
        }};

        coffeeMachine = new DrinkCrafter("cmachine"){{
            requirements(Category.crafting, with(Items.copper, 20, Items.metaglass, 10, Items.silicon, 10, MindyItems.wood, 5));
            result = MindyLiquids.coffee;
            liquidCapacity = 120f;
            itemCapacity = 30;
            ambientSound = Sounds.respawn;
            ambientSoundVolume = 0.5f;
            pumpAmount = 0.5f;
            updateEffect = Fx.pulverize;
            updateEffectChance = 0.08f;
            consumeItem(Items.scrap, 2);
            consumePower(3f);
            consumeLiquid(Liquids.water, 0.5f);
            placeablePlayer = false;
        }};

        yutnori = new Yutnori("gameyut"){{
            requirements(Category.effect, with(Items.copper, 10, Items.silicon, 10, MindyItems.wood, 40));
        }};

        altar = new Altar("altar"){{
            requirements(Category.effect, uwu ? BuildVisibility.shown : BuildVisibility.hidden, with(Items.scrap, 100));
        }};

        anucoinNode = new AnucoinNode("anucoin-node"){{
            requirements(Category.effect, with(Items.sand, 360, Items.copper, 240, Items.lead, 220, Items.graphite, 50, Items.metaglass, 50, Items.silicon, 50, Items.coal, 75));
            size = 4;
        }};

        anucoinSafe = new AnucoinVault("anucoin-safe"){{
            requirements(Category.effect, with(Items.sand, 200, Items.lead, 220, Items.titanium, 285, Items.thorium, 235, Items.graphite, 150, Items.plastanium, 75));
            size = 2;
        }};

        anucoinVault = new AnucoinVault("anucoin-vault"){{
            requirements(Category.effect, with(Items.sand, 240, Items.lead, 320, Items.titanium, 380, Items.thorium, 325, Items.silicon, 150, Items.surgeAlloy, 35));
            size = 3;
            capacity = 150000;
        }};

        itemShop = new Shop("item-shop"){{
            requirements(Category.effect, with(Items.sand , 240, Items.copper, 120, Items.titanium, 60, Items.thorium, 30, Items.plastanium, 20, Items.surgeAlloy, 10));
            size = 3;
            sellAllItems = true;
            soldBlocks = new Block[]{Blocks.container, pressureContainer, present};
            navigationBar = true;
            drawSpinSprite = true;
        }};

        unitShop = new Shop("unit-shop"){{
            requirements(Category.effect, with(Items.sand , 600, Items.lead, 520, Items.titanium, 860, Items.thorium, 200, Items.phaseFabric, 140, Items.surgeAlloy, 50));
            size = 5;
            sellAllUnits = true;
            spinShadowRadius = 18f;
        }};

        //todo balance & split & stuff
        extraShop = new Shop("extra-shop"){{
            requirements(Category.effect, BuildVisibility.sandboxOnly, with(Items.copper, 1));
            size = 3;
            purchases = new PurchaseItem[]{firstAid, invincibleCore, package1, package2, package3, package4, package5, package6, package7, package8, package9, package10, package11, package12, package13};
        }};

        cafe = new Store("cafe", "drink", new PurchaseItem[]{milk, ShopItems.coffee, herbTea, flowerTea, sporeJuice, cocktail}, "snack", new PurchaseItem[]{pancake, glowstick, diodeCookie, bossCake}, "block", new PurchaseItem[]{new PurchaseInvBlock(coffeeMachine, 6280, 1)}){{
            requirements(Category.effect, with(Items.sand, 500, Items.lead, 250, Items.titanium, 250, Items.graphite, 150, Items.metaglass, 100, Items.silicon, 50));

            size = 4;
        }};

        tradingPost = new TradingPost("trading-post"){{
            requirements(Category.effect, with(Items.copper, 1));

            size = 3;
        }};

        coinSource = new CoinSource("coin-source"){{
            requirements(Category.effect, BuildVisibility.sandboxOnly, with());
        }};

        //test
        floorRemover = new FloorRemover("floor-remover"){{
            requirements(Category.effect, BuildVisibility.hidden, with());
        }};
        metalGoldfloor = new DecorativeFloor("metal-golden-floor");
        routerFloor = new DecorativeFloor("router-floor");
        copperFloor = new DecorativeFloor("copper-floor");
        gamerSky = new DecorativeFloor("gamer-sky");
        gamerGreens = new DecorativeFloor("gamer-greens");
        gamerGrass = new DecorativeFloor("gamer-grass");
        gamerIron = new DecorativeFloor("gamer-iron");
        gamerWood = new DecorativeFloor("gamer-wood");
        gamerLeaves = new DecorativeFloor("gamer-leaves");
        gamerWaterfall = new DecorativeFloor("gamer-waterfall");
        gamerTrees = new DecorativeFloor("gamer-trees");
        gamerBricks = new DecorativeFloor("gamer-bricks");

        ancientStore = new DailyStore("ancient-store", "coins", new PurchaseItem[]{anucoins2000, anucoins4200, anucoins12000}){{
            requirements(Category.effect, uwu ? BuildVisibility.sandboxOnly : BuildVisibility.hidden, with(Items.copper, 1));
            size = 2;
            navigationBar = false;
            displayCurrency = MindyItems.bittrium;
            dailyItems = mergeItems(new PurchaseItem[]{
                    asPurchase(woodenCog, 1300, 10),
                    asDaily(starPen, 580, 0.1f),
                    asDaily(yutnori, 4800, 0.1f)
                    }, bitl(gamerSky, gamerGreens, gamerGrass, gamerWood, gamerIron, gamerLeaves, gamerWaterfall, gamerTrees, gamerBricks));
        }};

        testShop = new Shop("test-shop"){{
            requirements(Category.effect, uwu ? BuildVisibility.shown : BuildVisibility.debugOnly, with(Items.copper, 1));
            size = 3;
            defaultAnucoins = 1000;
            purchases = new PurchaseItem[]{package1, new ItemItem(MindyItems.source, 420, 69), new LiquidItem(Liquids.cryofluid, 5, 50f), new LiquidItem(Liquids.slag, 5, 50f), milk, ShopItems.coffee, herbTea, flowerTea, cocktail, holyRouter, new PurchaseInvBlock(starPen, 1, 1), new PurchaseInvBlock(Blocks.arc, 1699, 3), asPurchase(routerFloor, 69420, 99)};
            sellAllItems = sellAllUnits = sellAllBlocks = navigationBar = true;
            alwaysUnlocked = uwu;
        }};

        //scalar terraformer. turns stone -> dripstone & deepstone, spore -> moss
        terraformer1 = new Terraformer("terraformer-1", 1){{
            requirements(Category.effect, uwu ? BuildVisibility.shown : BuildVisibility.debugOnly, with(Items.scrap, 500, Items.coal, 500, Items.copper, 1000, Items.lead, 1000, Items.silicon, 500, Items.titanium, 500, Items.surgeAlloy, 400, Items.blastCompound, 400, MindyItems.bittrium, 100, MindyItems.bedrock, 50));
            lightColor = Pal2.scalar;
            orbColor = Color.yellow;
            ores = new Floor[]{(Floor)oreScalar};
            threshMultiplier = 0.94f;
            //stone floors
            terraFloors.put(Blocks.stone, borudalite);
            terraFloors.put(Blocks.craters, mossyBorudalite);
            terraFloors.put(Blocks.charr, mossyBorudalite);
            terraFloors.put(Blocks.dirt, borudalite);
            terraFloors.put(Blocks.mud, mossyBorudalite);
            terraFloors.put(blackstone, borudalite);
            terraFloors.put(redstone, borudalite);
            //grass floors
            terraFloors.put(Blocks.moss, twilightMoss);
            terraFloors.put(Blocks.sporeMoss, starryMoss);
            terraFloors.put(Blocks.grass, twilightMoss);

            terraFloors.put(Blocks.water, starryWater);
            terraFloors.put(Blocks.taintedWater, starryMossWater);
            terraFloors.put(Blocks.deepwater, starryWaterDeep);
            terraFloors.put(Blocks.deepTaintedWater, starryWaterDeep);
            terraFloors.put(Blocks.darksandWater, starrySandWater);
            terraFloors.put(Blocks.darksandTaintedWater, starrySandWater);
            terraFloors.put(Blocks.sandWater, starrySandWater);
            terraFloors.put(Blocks.sand, milksand);
            terraFloors.put(Blocks.darksand, milksand);
            //walls
            terraBlocks.put(Blocks.stoneWall, borudaliteWall);
            terraBlocks.put(Blocks.dirtWall, borudaliteWall);
            terraBlocks.put(blackstoneWall, borudaliteWall);
            terraBlocks.put(Blocks.sandWall, milkduneWall);
            terraBlocks.put(Blocks.duneWall, milkduneWall);
            terraBlocks.put(Blocks.sporeWall, twilightMossWall);
            terraBlocks.put(Blocks.shrubs, twilightMossWall);
            terraBlocks.put(redstoneWall, borudaliteWall);

            terraBlocks.put(Blocks.sporePine, starPine);
            terraBlocks.put(redPine, starPine);
            terraBlocks.put(blackPine, starPine);
            terraBlocks.put(Blocks.pine, starPine);
            terraBlocks.put(Blocks.whiteTree, largeTree);//
            terraBlocks.put(Blocks.whiteTreeDead, largeTree);//

            terraBlocks.put(Blocks.boulder, borudaliteDol);
            terraBlocks.put(Blocks.sandBoulder, milksandBoulder);
            terraBlocks.put(Blocks.sporeCluster, milksandBoulder);//
        }};

        //classic terraformer. turns stone -> dirt, spore -> grass
        terraformerC = new Terraformer("terraformer-c", 0){{
            requirements(Category.effect, with(Items.scrap, 512, Items.coal, 512, Items.titanium, 512, MindyItems.pixellium, 64));
            lightColor = Pal2.exp;
            orbColor = Pal.heal;
            ores = new Floor[]{(Floor) Blocks.oreScrap};
            //stone floors
            terraFloors.put(Blocks.stone, Blocks.dirt);
            terraFloors.put(Blocks.craters, Blocks.mud);
            terraFloors.put(Blocks.charr, Blocks.mud);

            terraFloors.put(blackstone, Blocks.dirt);
            terraFloors.put(redstone, Blocks.dirt);
            terraFloors.put(borudalite, Blocks.dirt);
            //grass floors
            terraFloors.put(Blocks.moss, Blocks.grass);
            terraFloors.put(Blocks.sporeMoss, Blocks.grass);
            terraFloors.put(twilightMoss, Blocks.grass);
            terraFloors.put(starryMoss, Blocks.grass);

            terraFloors.put(Blocks.taintedWater, Blocks.water);
            terraFloors.put(starryWater, Blocks.water);
            terraFloors.put(starryMossWater, Blocks.water);
            terraFloors.put(Blocks.deepTaintedWater, Blocks.deepwater);
            terraFloors.put(starryWaterDeep, Blocks.deepwater);
            terraFloors.put(Blocks.darksandTaintedWater, Blocks.sandWater);
            terraFloors.put(Blocks.darksandWater, Blocks.sandWater);
            terraFloors.put(starrySandWater, Blocks.sandWater);

            terraFloors.put(Blocks.darksand, Blocks.sand);
            terraFloors.put(milksand, Blocks.sand);
            //walls
            terraBlocks.put(Blocks.stoneWall, Blocks.dirtWall);
            terraBlocks.put(blackstoneWall, Blocks.dirtWall);
            terraBlocks.put(redstoneWall, Blocks.dirtWall);
            terraBlocks.put(borudaliteWall, Blocks.dirtWall);

            terraBlocks.put(Blocks.duneWall, Blocks.sandWall);
            terraBlocks.put(milkduneWall, Blocks.sandWall);

            terraBlocks.put(Blocks.sporeWall, Blocks.shrubs);
            terraBlocks.put(twilightMossWall, Blocks.shrubs);
            terraBlocks.put(Blocks.sporePine, Blocks.pine);
            terraBlocks.put(redPine, Blocks.pine);
            terraBlocks.put(blackPine, Blocks.pine);
            terraBlocks.put(starPine, Blocks.pine);
            terraBlocks.put(Blocks.whiteTree, largeTree);
            terraBlocks.put(Blocks.whiteTreeDead, largeTree);

            terraBlocks.put(Blocks.boulder, Blocks.router);
            terraBlocks.put(borudaliteDol, Blocks.junction);
        }};

        esotManual = new LoreManual("esot-manual"){{
            buildVisibility = uwu ? BuildVisibility.shown : BuildVisibility.editorOnly;
        }};

        esotPage1 = new ManualPiece("esot-piece-1", LorePages.esot1){{
            buildVisibility = BuildVisibility.editorOnly;
            parent = (LoreManual) esotManual;
        }};

        esotPage2 = new ManualPiece("esot-piece-2", LorePages.esot2){{
            buildVisibility = BuildVisibility.editorOnly;
            parent = (LoreManual) esotManual;
        }};

        fallenFlare = new FallenUnit("fallen-flare");
        fallenMono = new FallenUnit("fallen-mono"){{
            unitName = "mono";
        }};
        fallenHorizon = new FallenUnit("fallen-horizon"){{
            unitName = "horizon";
        }};
        fallenAlpha = new FallenUnit("fallen-alpha"){{
            unitName = "alpha";
            unitTeam = Team.derelict;
        }};

        sentryGun = new SentryTurret("sentry-gun"){{
            buildVisibility = uwu ? BuildVisibility.shown : BuildVisibility.editorOnly;
            reload = 5f;
            range = 312f;
            health = 4096;
            shootType = new InstantHitBulletType(1f){{
                hitColor = trailColor = Pal.accent.cpy().lerp(Color.orange, 0.3f);
                percentDamage = 0.15f; //six shots and ded
            }};
            inaccuracy = 0.2f;
        }};

        esotChest = new LoreChest("esot-chest"){{
            buildVisibility = uwu ? BuildVisibility.shown : BuildVisibility.editorOnly;
            category = Category.effect;
            size = 2;
            clipSize = 360f;
        }};

        barrier = new Barrier("barrier"){{
            buildVisibility = uwu ? BuildVisibility.shown : BuildVisibility.editorOnly;
            category = Category.effect;
            size = 1;
            clipSize = 360f;
        }};
    }
}
